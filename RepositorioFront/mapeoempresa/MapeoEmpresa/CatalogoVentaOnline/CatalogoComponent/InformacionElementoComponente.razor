
@inject ElementoService elementoService
@inject CatalogoService catalogoService
@inherits ComponenteTab

<style>
    .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
    }

        .btn-primary:hover {
            background-color: #0056b3;
            border-color: #0056b3;
        }

    .product-image {
        position: relative;
        overflow: hidden;
    }

        .product-image img {
            transition: transform 0.3s ease-in-out;
        }

        .product-image:hover img {
            transform: scale(1.2);
        }

    .carrito-banner {
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 1000;
    }

    .carrito-button {
        background-color: #007bff;
        color: #fff;
        border: none;
        border-radius: 50%;
        width: 50px;
        height: 50px;
        text-align: center;
        font-size: 24px;
        line-height: 50px;
        transition: background-color 0.3s ease;
    }

        .carrito-button:hover {
            background-color: #0056b3;
        }

    .carrito-icon {
        max-width: 100%;
        max-height: 100%;
    }

    .productos-interesantes {
        border: 1px solid #e0e0e0;
        padding: 16px;
        background-color: #fff;
        box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.1);
        margin-bottom: 16px;
    }

    .titulo {
        font-size: 18px;
        font-weight: bold;
        margin-bottom: 12px;
    }

    .carousel-control-prev,
    .carousel-control-next {
        background-color: transparent; /* Fondo transparente */
        border: 2px solid #007bff; /* Borde sólido azul */
        color: #007bff; /* Color del texto */
        border-radius: 50%; /* Borde redondeado para un aspecto de botón */
        width: 40px; /* Ancho del botón */
        height: 40px; /* Altura del botón */
        line-height: 1; /* Alineación vertical del contenido */
        font-size: 20px; /* Tamaño de fuente */
        transition: background-color 0.3s, color 0.3s; /* Transición suave */
    }

        .carousel-control-prev:hover,
        .carousel-control-next:hover {
            background-color: #007bff; /* Fondo azul al pasar el mouse */
            color: #fff; /* Texto blanco al pasar el mouse */
        }
</style>
<!--
<div class="progress">
    <div class="progress-bar" role="progressbar" style="width: 25%;" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">Paso 1</div>
</div>-->



<div class="carrito-banner">
    <a href="/carrito_compras">
        <button class="btn btn-primary ml-3 carrito-button">
            <i class="fas fa-shopping-cart"></i>
        </button>
    </a>
</div>
<div class="container mt-4">
    <div class="row">
        <div class="col-md-6">
            <img src="https://www.lg.com/co/images/lavasecadoras/wfs1959ekd/gallery/large01.jpg" class="img-fluid w-100" alt="Imagen del producto">
        </div>
        <div class="col-md-6">
            <h1><strong>@elemento.Nombre</strong></h1>
            <p><strong>Tipo:</strong> @elemento.Tipo</p>
            <p><strong>Marca:</strong> @elemento.Marca</p>
            <p><strong>Precio:</strong> @elemento.Valor $</p>
            <div class="d-flex justify-content-between align-items-center">
                <p style="text-transform: uppercase; color: blue;">Referencia: @elemento.Ref1@elemento.Ref2@elemento.Ref3@elemento.Ref4@elemento.Ref5</p>
                <div>

                    <label for="cantidad">Cantidad:</label>
                    <select id="cantidad" @bind="cantidad" class="form-control">
                        @for (int i = 1; i <= 12; i++)
                        {
                            <option value="@i">@i</option>
                        }
                    </select>
                </div>

            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
            </div>
            <div class="col-md-3">
                <button class="btn btn-primary ml-2" @onclick="AgregarAlCarrito">
                    <i class="fas fa-shopping-cart"></i> Agregar al Carrito
                </button>
            </div>
        </div>
    </div>
</div>
<br />
<br />
<div class="productos-interesantes">
    <div class="titulo">Otros productos que podrían interesarte</div>
</div>

<div class="container">
    <div id="carouselProductos" class="carousel slide" data-ride="carousel">
        <ol class="carousel-indicators">
            @for (int i = 0; i < Math.Ceiling((double)elementosCarrusel.Count / 3); i++)
            {
                <li data-target="#carouselProductos" data-slide-to="@i" class="@(i == 0 ? "active" : "")"></li>
            }
        </ol>
        <div class="carousel-inner">
            @for (int i = 0; i < elementosCarrusel.Count; i += 3)
            {
                var activeClass = i == 0 ? "active" : "";
                var endIndex = Math.Min(i + 3, elementosCarrusel.Count);
                <div class="carousel-item @activeClass">
                    <div class="row">
                        @for (int j = i; j < endIndex; j++)
                        {
                            <div class="col-md-4">
                                <div class="card">
                                    <img src="https://colchonesrelax.com.co/cdn/shop/products/Silla_reclinable__el_C3_A9ctrica_Masajeadora__Houston.jpg?v=1681516697" class="card-img-top" alt="@elementos[j].Nombre">
                                    <div class="card-body">
                                        <h5 class="card-title">@elementosCarrusel[j].Nombre</h5>
                                        <p class="card-text">@elementosCarrusel[j].Valor $ </p>
                                        <a href="/informacionelemento/@elementosCarrusel[j].CodigoArticulo">
                                            <p >Más información..</p>
                                        </a>

                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
        <a class="carousel-control-prev" href="#carouselProductos" role="button" data-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="sr-only">Anterior</span>
        </a>
        <a class="carousel-control-next" href="#carouselProductos" role="button" data-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="sr-only">Siguiente</span>
        </a>
    </div>
</div>
<ComponenteCarrito origen=@("InformacionElemento") @ref="componenteCarrito" />
@code {
    private ElementoInterfazGraficaVentaDTO elemento;
    private List<ElementoInterfazGraficaVentaDTO>? elementos;
    private List<ElementoInterfazGraficaVentaDTO>? elementosCarrusel;
    private String textoBusqueda = string.Empty;
    private int cantidad = 1;
    private long id_catalogo = 0;
    [Parameter]
    public long CodigoArticulo { get; set; }
    private ComponenteCarrito componenteCarrito;



    protected override Task OnInitializedAsync()
    {
        elementos = elementoService.ObtenerElementosCarrusel();
        elemento = elementos.FirstOrDefault(e => e.CodigoArticulo == CodigoArticulo);
        id_catalogo = catalogoService.ObtenerIdCatalogoSegunIdElemento(elemento.CodigoArticulo);
        elementosCarrusel = catalogoService.ObtenerElementosSegunCatalogos(id_catalogo);
        Console.WriteLine($"Cant hermanos {elementosCarrusel.Count}");
        return base.OnInitializedAsync();
    }
    private void cambiarElemento(ElementoInterfazGraficaVentaDTO actual)
    {
        CodigoArticulo = actual.CodigoArticulo;
        elemento = actual;
        Refrescar();
    }
    private void Refrescar()
    {
        Mostrar();
    }
    private void AgregarAlCarrito()
    {
        elemento.CantidadSolicitadaEnCarrito = cantidad;
        ListadoCarritoCompras.InsertarElementoAlCarrito(elemento);
        componenteCarrito.Mostrar();
    }
}