@page "/pagarea"
@attribute [Authorize(Roles = "EMPRESA,EMPLEADO", Policy = "PoliticaDefinirEmpresa")]

@using System.Numerics;
@using EntidadesNegocio.EntidadesDto;
@inject AreaService AreaService;
@inject ComponenteService ComponenteService;
@inject PlantaService PlantaService;
@inject NavigationManager NavigationManager

<PageTitle>Áreas de procesos</PageTitle>

<div class="flex-container">
    <button class="btn" @onclick="Retroceder">
        <i class="fas fa-circle-chevron-left"></i>
    </button>
    <h1><b>Áreas de proceso</b></h1>
</div>


<div class="col-lg-9 contact-form__wrapper">
    <div class="row">
        <div class="input-group mb-3">
            <span class="input-group-text input-title">ID Planta</span>
            <input type="text" value="@PlantaService.PlantaSeleccionada.id" class="form-control custom-input" id="id" readonly>
            <span class="input-group-text input-title">Nombre</span>
            <input type="text" value="@PlantaService.PlantaSeleccionada.nombre" class="form-control custom-input" id="contacto" readonly>
        </div>

        <div>
            <div class="input-group mb-3">
                <input type="search" class="form-control custom-input" id="busqueda" @bind="IdBusqueda" placeholder="Búsqueda por Id">
                <button class="btn btn-sm btn-secondary" type="button" @onclick="() => BuscarArea(IdBusqueda)">
                    <i class="oi oi-magnifying-glass"></i>
                </button>
            </div>
        </div>
    </div>
    <div>
        @if (AlertaBusqueda)
        {
            <div class="alert alert-danger" role="alert">
                <strong>Error: </strong> Por favor ingresa un ID válido.
            </div>
        }
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Informacion encontrada</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        @if (area != null)
                        {
                            <strong>ID: </strong> @area.id <br />
                            <strong>Nombre: </strong> @area.nombre <br />
                            <button type="button" class="btn btn-primary my-2" @onclick="() => AsociarComponente(area)">Asociar componente</button>
                        }else{
                            <p>No se ha encontrado información</p>
                        }
                    </td>
                    
                </tr>

            </tbody>
        </table>
    </div>
</div>

<br />
<div>
    @foreach (var item in types)
    {
        if (Array.IndexOf(types, item) == selected)
        {
            <button class="btn btn-secondary">@item.Name</button>
        }
        else
        {
            <button class="btn btn-outline-secondary" @onclick="() => selected = Array.IndexOf(types, item)">@item.Name</button>
        }
    }
</div>
@GetRenderFragment(types[selected])

@code {
    private string IdBusqueda;
    AreaDTO area;
    private bool AlertaBusqueda = false;

    int selected;
    ComponentBase[] components = { new CrearArea(), new Listado() };
    Type[] types => components.Select(c => c.GetType()).ToArray();

    RenderFragment GetRenderFragment(Type type)
    {
        RenderFragment renderFragment = renderTreeBuilder =>
        {
            renderTreeBuilder.OpenComponent(0, type);
            renderTreeBuilder.CloseComponent();
        };
        return renderFragment;
    }

    protected async Task BuscarArea(string id)
    {
        if (BigInteger.TryParse(id, out BigInteger idFinal))
        {
            AlertaBusqueda = false;
            area = await PlantaService.BuscarArea(idFinal);
        }
        else
        {
            AlertaBusqueda = true;
        }

    }

    private void AsociarComponente(AreaDTO Area)
    {
        AreaService.AreaSeleccionada = area;
        ComponenteService.ComponenteAnterior = null;
        NavigationManager.NavigateTo("/pagcomponente");
    }

    private void Retroceder()
    { 
        if (AreaService.ComponenteAnterior != null && AreaService.ComponenteAnterior.Equals("mapaProcesos"))
        {
            NavigationManager.NavigateTo("/mapadeprocesos");
        }
        else
        {
            NavigationManager.NavigateTo("/pagplanta");
        }

    }
  
}


