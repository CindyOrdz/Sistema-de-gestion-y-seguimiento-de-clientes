@page "/pagCondicionesOperativas"
@attribute [Authorize(Roles = "EMPRESA,EMPLEADO", Policy = "PoliticaDefinirEmpresa")]

@inject ParteService ParteService;
@inject CondicionOperativaInicialService CondicionOperativaInicialService;
@inject NavigationManager NavigationManager;

<PageTitle>Condiciones operativas</PageTitle>
<div class="flex-container">
    <button class="btn" @onclick="Retroceder">
        <i class="fas fa-circle-chevron-left"></i>
    </button>
    <h1><b>Condiciones operativas iniciales</b></h1>
</div>

<div class="col-lg-9 contact-form__wrapper">
    <div class="row">
        <div class="input-group mb-3">
            <span class="input-group-text input-title">ID parte</span>
            <input type="number" value="@ParteService.ParteDTOSeleccionada.Id" class="form-control custom-input" id="id" readonly>
            <span class="input-group-text input-title">Nombre</span>
            <input type="text" value="@ParteService.ParteDTOSeleccionada.NombreElemento" class="form-control custom-input" id="nombre" readonly>
        </div>
    </div>
</div>
<div>
    @foreach (var item in types)
    {
        if (Array.IndexOf(types, item) == selected)
        {
            <button class="btn btn-secondary">@item.Name</button>
        }
        else
        {
            <button class="btn btn-outline-secondary" @onclick="() => selected = Array.IndexOf(types, item)">@item.Name</button>
        }
    }
</div>
@GetRenderFragment(types[selected])

@code {
    int selected;
    ComponentBase[] components = { new CrearListado(), new GestionarCondiciones() };
    Type[] types => components.Select(c => c.GetType()).ToArray();

    RenderFragment GetRenderFragment(Type type)
    {
        RenderFragment renderFragment = renderTreeBuilder =>
        {
            renderTreeBuilder.OpenComponent(0, type);
            renderTreeBuilder.CloseComponent();
        };
        return renderFragment;
    }

    
    private void Retroceder()
    {
        if (CondicionOperativaInicialService.ComponenteAnterior != null && CondicionOperativaInicialService.ComponenteAnterior.Equals("mapaProcesos"))
        {
            NavigationManager.NavigateTo("/mapadeprocesos");
        }
        else
        {
            NavigationManager.NavigateTo("/pagparte");
        }

    }

}
